//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.04.26 at 02:58:55 PM CEST 
//


package org.w3._2006._01.wsdl;

import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;


/**
 * 
 *       This type is extended by component types to allow 
 *       attributes from other namespaces to be added.
 *       
 * 
 * <p>Java class for ExtensibleDocumentedType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ExtensibleDocumentedType">
 *   &lt;complexContent>
 *     &lt;extension base="{http://www.w3.org/2006/01/wsdl}DocumentedType">
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ExtensibleDocumentedType")
@XmlSeeAlso({
    IncludeType.class,
    TypesType.class,
    EndpointType.class,
    ImportType.class,
    FeatureType.class,
    ServiceType.class,
    PropertyType.class,
    DescriptionType.class,
    BindingType.class,
    InterfaceType.class,
    MessageRefFaultType.class,
    InterfaceOperationType.class,
    BindingOperationType.class,
    BindingOperationMessageType.class,
    MessageRefType.class,
    InterfaceFaultType.class,
    BindingFaultType.class,
    BindingOperationFaultType.class
})
public abstract class ExtensibleDocumentedType
    extends DocumentedType
{

    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
